<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>借助 Clash 设置 wsl 的终端代理</title>
    <link href="/2023/07/24/misc-1/"/>
    <url>/2023/07/24/misc-1/</url>
    
    <content type="html"><![CDATA[<p>借助此次短学期机会，将代理换成了 <code>Clash + ZJU Rule + ZJU Connect</code>，并且实现了 <code>wsl</code> 的终端代理，拥有了更畅快的科学上网体验！</p><span id="more"></span><style>    .markdown-body {    font-family: "思源宋体 Light","Microsoft YaHei",Georgia, sans, serif;    font-size: 15px;  }</style><h2 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h2><p>这几天上完短学期课程回家，虽然课程结束但是 lab 和 report 并没有结束。于是开始跑之前写好的程序，准备截几张图放进 report 里，结果发现……有一道题跑不通了TT</p><p>那题是校内平台上的，得要内网访问，转头看了一眼课程群，发现也有同学有相同的问题，4 老师建议使用 tun2socks, proxychains4 等软件。于是笔者尝试捣鼓了一下 proxychains4，不出意料的失败了。因为之前有过设置 wsl 终端代理失败的诸多痛苦经历，笔者对此已经是见怪不怪，但是 report 的截图迟迟没有着落，笔者也很想设置好 wsl 的终端代理来减少 wsl 内下包下不下来一直失败的情况，正好班群里 lhjgg 提到他都是把 Clash 的 TUN Mode 打开来实现 wsl 的终端代理，在双重压力之下，笔者又开始了配环境的旅程。</p><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p>前排提醒：笔者为 Win 11 系统，使用的是 wsl2 。</p><p>笔者以前科学上网用的是 ShadowsocksR(ssr) ，要转成 Clash 略有麻烦，所幸校内论坛里有前辈已经铺好了路，按着走就行。</p><ul><li><p>安装 Clash</p><p>这个别下错架构，以及挑个网好的时候就行了。</p></li><li><p>安装 ZJU Connect<sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote"><span class="hint--top hint--rounded" aria-label="[ZJU Connect repo](https://github.com/Mythologyli/ZJU-Connect)">[1]</span></a></sup></p><p>别惦记着你那 Easy Connect 了，对自己（的电脑）好点。</p></li></ul><h2 id="开始配置"><a href="#开始配置" class="headerlink" title="开始配置"></a>开始配置</h2><ul><li><p>应用 ZJU Rule<sup id="fnref:2" class="footnote-ref"><a href="#fn:2" rel="footnote"><span class="hint--top hint--rounded" aria-label="[ZJU Rule repo](https://github.com/Mythologyli/ZJU-Rule)">[2]</span></a></sup></p><p>这个服务本质上是使用论坛前辈已经部署好的 subconverter 实现订阅链接的转换，并加入分组分流的信息。<br>ZJU Connect 的链接在 ZJU Connect for Windows 的高级选项内有，直接复制过去一起给 ZJU Rule 转换就行。<br>然后从 Clash 上 download 下来，ZJU 内网和 ZJU More Scholar 的节点切换为 ZJU Connect 即可。</p></li><li><p>开启 TUN Mode</p><p>那么就到设置 wsl 终端代理了。但为啥这个 TUN Mode 就能做到呢？这里引一下 Clash 的文档<sup id="fnref:3" class="footnote-ref"><a href="#fn:3" rel="footnote"><span class="hint--top hint--rounded" aria-label="[Clash TUN Mode](https://docs.cfw.lbyczf.com/contents/tun.html)">[3]</span></a></sup>。</p><blockquote><p>对于不遵循系统代理的软件，TUN 模式可以接管其流量并交由 CFW 处理</p></blockquote><p>CFW 就是 Clash for Windows，笔者猜想是正常的代理都没法代理 wsl，即 wsl 就是那种不遵循系统代理的软件，那么 TUN Mode 正适合它。</p><p>开启过程在文档内都有，就不赘述了。<br>不过开启 TUN Mode 需要先安装 Service Mode，笔者有个同学和笔者是相同的配置，却并没有成功，仔细一问是 Service Mode 没装。</p><img src="/2023/07/24/misc-1/01.png" class="" title="ac01"></li></ul><h2 id="过程总结"><a href="#过程总结" class="headerlink" title="过程总结"></a>过程总结</h2><p>整体上的流程就是安装好 Clash，然后有学校内网的 rvpn 和机场的订阅链接，将它们利用 subconverter 转换为 Clash 的链接，最后开启 TUN Mode 就行了。前辈把路搭好的话问题确实不大，但要是从零开始实现的话感觉还是相当困难的。</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="https://github.com/Mythologyli/ZJU-Connect">ZJU Connect repo</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:2" class="footnote-text"><span><a href="https://github.com/Mythologyli/ZJU-Rule">ZJU Rule repo</a><a href="#fnref:2" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:3" class="footnote-text"><span><a href="https://docs.cfw.lbyczf.com/contents/tun.html">Clash TUN Mode</a><a href="#fnref:3" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>misc</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Computer Science</tag>
      
      <tag>wsl</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
